/****************************************************************************
**
** Copyright (C) 2014 Alexander Rössler
** License: LGPL version 2.1
**
** This file is part of QtQuickVcp.
**
** All rights reserved. This program and the accompanying materials
** are made available under the terms of the GNU Lesser General Public License
** (LGPL) version 2.1 which accompanies this distribution, and is available at
** http://www.gnu.org/licenses/lgpl-2.1.html
**
** This library is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
** Lesser General Public License for more details.
**
** Contributors:
** Alexander Rössler @ The Cool Tool GmbH <mail DOT aroessler AT gmail DOT com>
**
****************************************************************************/
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: package.proto

#ifndef PROTOBUF_package_2eproto__INCLUDED
#define PROTOBUF_package_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_package_2eproto();
void protobuf_AssignDesc_package_2eproto();
void protobuf_ShutdownFile_package_2eproto();

class Package;
class Package_Frame;

// ===================================================================

class Package_Frame : public ::google::protobuf::Message {
 public:
  Package_Frame();
  virtual ~Package_Frame();

  Package_Frame(const Package_Frame& from);

  inline Package_Frame& operator=(const Package_Frame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Package_Frame& default_instance();

  void Swap(Package_Frame* other);

  // implements Message ----------------------------------------------

  Package_Frame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Package_Frame& from);
  void MergeFrom(const Package_Frame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 timestamp_unix = 1;
  inline bool has_timestamp_unix() const;
  inline void clear_timestamp_unix();
  static const int kTimestampUnixFieldNumber = 1;
  inline ::google::protobuf::uint32 timestamp_unix() const;
  inline void set_timestamp_unix(::google::protobuf::uint32 value);

  // required uint32 timestamp_s = 2;
  inline bool has_timestamp_s() const;
  inline void clear_timestamp_s();
  static const int kTimestampSFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp_s() const;
  inline void set_timestamp_s(::google::protobuf::uint32 value);

  // required uint32 timestamp_us = 3;
  inline bool has_timestamp_us() const;
  inline void clear_timestamp_us();
  static const int kTimestampUsFieldNumber = 3;
  inline ::google::protobuf::uint32 timestamp_us() const;
  inline void set_timestamp_us(::google::protobuf::uint32 value);

  // required bytes blob = 4;
  inline bool has_blob() const;
  inline void clear_blob();
  static const int kBlobFieldNumber = 4;
  inline const ::std::string& blob() const;
  inline void set_blob(const ::std::string& value);
  inline void set_blob(const char* value);
  inline void set_blob(const void* value, size_t size);
  inline ::std::string* mutable_blob();
  inline ::std::string* release_blob();
  inline void set_allocated_blob(::std::string* blob);

  // @@protoc_insertion_point(class_scope:pb.Package.Frame)
 private:
  inline void set_has_timestamp_unix();
  inline void clear_has_timestamp_unix();
  inline void set_has_timestamp_s();
  inline void clear_has_timestamp_s();
  inline void set_has_timestamp_us();
  inline void clear_has_timestamp_us();
  inline void set_has_blob();
  inline void clear_has_blob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 timestamp_unix_;
  ::google::protobuf::uint32 timestamp_s_;
  ::std::string* blob_;
  ::google::protobuf::uint32 timestamp_us_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_package_2eproto();
  friend void protobuf_AssignDesc_package_2eproto();
  friend void protobuf_ShutdownFile_package_2eproto();

  void InitAsDefaultInstance();
  static Package_Frame* default_instance_;
};
// -------------------------------------------------------------------

class Package : public ::google::protobuf::Message {
 public:
  Package();
  virtual ~Package();

  Package(const Package& from);

  inline Package& operator=(const Package& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Package& default_instance();

  void Swap(Package* other);

  // implements Message ----------------------------------------------

  Package* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Package& from);
  void MergeFrom(const Package& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Package_Frame Frame;

  // accessors -------------------------------------------------------

  // repeated .pb.Package.Frame frame = 1;
  inline int frame_size() const;
  inline void clear_frame();
  static const int kFrameFieldNumber = 1;
  inline const ::pb::Package_Frame& frame(int index) const;
  inline ::pb::Package_Frame* mutable_frame(int index);
  inline ::pb::Package_Frame* add_frame();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Package_Frame >&
      frame() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Package_Frame >*
      mutable_frame();

  // @@protoc_insertion_point(class_scope:pb.Package)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Package_Frame > frame_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_package_2eproto();
  friend void protobuf_AssignDesc_package_2eproto();
  friend void protobuf_ShutdownFile_package_2eproto();

  void InitAsDefaultInstance();
  static Package* default_instance_;
};
// ===================================================================


// ===================================================================

// Package_Frame

// required uint32 timestamp_unix = 1;
inline bool Package_Frame::has_timestamp_unix() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Package_Frame::set_has_timestamp_unix() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Package_Frame::clear_has_timestamp_unix() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Package_Frame::clear_timestamp_unix() {
  timestamp_unix_ = 0u;
  clear_has_timestamp_unix();
}
inline ::google::protobuf::uint32 Package_Frame::timestamp_unix() const {
  return timestamp_unix_;
}
inline void Package_Frame::set_timestamp_unix(::google::protobuf::uint32 value) {
  set_has_timestamp_unix();
  timestamp_unix_ = value;
}

// required uint32 timestamp_s = 2;
inline bool Package_Frame::has_timestamp_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Package_Frame::set_has_timestamp_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Package_Frame::clear_has_timestamp_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Package_Frame::clear_timestamp_s() {
  timestamp_s_ = 0u;
  clear_has_timestamp_s();
}
inline ::google::protobuf::uint32 Package_Frame::timestamp_s() const {
  return timestamp_s_;
}
inline void Package_Frame::set_timestamp_s(::google::protobuf::uint32 value) {
  set_has_timestamp_s();
  timestamp_s_ = value;
}

// required uint32 timestamp_us = 3;
inline bool Package_Frame::has_timestamp_us() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Package_Frame::set_has_timestamp_us() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Package_Frame::clear_has_timestamp_us() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Package_Frame::clear_timestamp_us() {
  timestamp_us_ = 0u;
  clear_has_timestamp_us();
}
inline ::google::protobuf::uint32 Package_Frame::timestamp_us() const {
  return timestamp_us_;
}
inline void Package_Frame::set_timestamp_us(::google::protobuf::uint32 value) {
  set_has_timestamp_us();
  timestamp_us_ = value;
}

// required bytes blob = 4;
inline bool Package_Frame::has_blob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Package_Frame::set_has_blob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Package_Frame::clear_has_blob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Package_Frame::clear_blob() {
  if (blob_ != &::google::protobuf::internal::GetEmptyString()) {
    blob_->clear();
  }
  clear_has_blob();
}
inline const ::std::string& Package_Frame::blob() const {
  return *blob_;
}
inline void Package_Frame::set_blob(const ::std::string& value) {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyString()) {
    blob_ = new ::std::string;
  }
  blob_->assign(value);
}
inline void Package_Frame::set_blob(const char* value) {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyString()) {
    blob_ = new ::std::string;
  }
  blob_->assign(value);
}
inline void Package_Frame::set_blob(const void* value, size_t size) {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyString()) {
    blob_ = new ::std::string;
  }
  blob_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Package_Frame::mutable_blob() {
  set_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyString()) {
    blob_ = new ::std::string;
  }
  return blob_;
}
inline ::std::string* Package_Frame::release_blob() {
  clear_has_blob();
  if (blob_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = blob_;
    blob_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void Package_Frame::set_allocated_blob(::std::string* blob) {
  if (blob_ != &::google::protobuf::internal::GetEmptyString()) {
    delete blob_;
  }
  if (blob) {
    set_has_blob();
    blob_ = blob;
  } else {
    clear_has_blob();
    blob_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}

// -------------------------------------------------------------------

// Package

// repeated .pb.Package.Frame frame = 1;
inline int Package::frame_size() const {
  return frame_.size();
}
inline void Package::clear_frame() {
  frame_.Clear();
}
inline const ::pb::Package_Frame& Package::frame(int index) const {
  return frame_.Get(index);
}
inline ::pb::Package_Frame* Package::mutable_frame(int index) {
  return frame_.Mutable(index);
}
inline ::pb::Package_Frame* Package::add_frame() {
  return frame_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Package_Frame >&
Package::frame() const {
  return frame_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Package_Frame >*
Package::mutable_frame() {
  return &frame_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_package_2eproto__INCLUDED
